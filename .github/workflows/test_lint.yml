name: Run tests and linting

on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/python_setup
      - name: Check linting
        id: check_lint
        run: uvx ruff check --exclude "instant_python/templates" instant_python test
        continue-on-error: true
      - name: Auto fix lint errors
        id: fix_lint
        if: ${{ steps.check_lint.outcome == 'failure' }}
        run: uvx ruff check --fix --exclude "instant_python/templates" instant_python test
      - name: Commit lint fixes
        if: ${{ steps.fix_lint.outcome == 'success' }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          if git diff --quiet; then
            echo "No changes to commit."
          else
            git add .
            git commit -m "ðŸš¨ chore: fix linting issues via GitHub Actions"
            git push
          fi
      - name: Check linting again
        run: uvx ruff check --exclude "instant_python/templates" instant_python test

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/python_setup
      - name: Check code format
        run: uvx ruff format --check --exclude "instant_python/templates" instant_python test

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/python_setup
      - name: Install test dependencies
        run: uv pip install pytest pytest-cov
      - name: Run tests
        run: uv run pytest --cov=instant_python --cov-report=xml --cov-report=html --cov-report=term-missing test -ra
      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          files: coverage.xml
          flags: unittests
          name: codecov-coverage
