{'src': {'__init__.py': '', 'application': {'__init__.py': ''}, 'domain': {'__init__.py': '', 'exceptions': {'__init__.py': '', 'domain_error.py': 'from abc import ABC\n\n\nclass DomainError(Exception, ABC):\n\tdef __init__(self, message: str, error_type: str) -> None:\n\t\tself._message = message\n\t\tself._type = error_type\n\t\tsuper().__init__(self._message)\n\n\t@property\n\tdef type(self) -> str:\n\t\treturn self._type\n\n\t@property\n\tdef message(self) -> str:\n\t\treturn self._message\n\n\tdef to_primitives(self) -> dict[str, str]:\n\t\treturn {\n\t\t\t"type": self.type,\n\t\t\t"message": self.message,\n\t\t}'}}}}
